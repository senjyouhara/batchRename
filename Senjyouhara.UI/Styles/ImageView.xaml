<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Senjyouhara.UI.Controls"
                    xmlns:hc="https://handyorg.github.io/handycontrol">


    <ControlTemplate x:Key="PrevButtonTemplate" TargetType="{x:Type Button}">
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
            <Border x:Name="Border" CornerRadius="50" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                    Background="#80000000">
                <TextBlock Text="&#xe643;" Margin="0 0 6 3" VerticalAlignment="Center" HorizontalAlignment="Center"
                           FontSize="36" FontFamily="{DynamicResource Iconfont}" Foreground="#ffffff" />
            </Border>

            <!-- <ContentPresenter HorizontalAlignment="Center" -->
            <!--                   VerticalAlignment="Center" /> -->
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetName="Border"
                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                            To="#60000000"
                            Duration="0:0:0.2">
                            <ColorAnimation.EasingFunction>
                                <BackEase EasingMode="EaseInOut" />
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetName="Border"
                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                            To="#80000000"
                            Duration="0:0:0.2">
                            <ColorAnimation.EasingFunction>
                                <BackEase EasingMode="EaseInOut" />
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeftButtonUp">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetName="Border"
                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                            To="#70000000"
                            Duration="0:0:0.2">
                            <ColorAnimation.EasingFunction>
                                <BackEase EasingMode="EaseInOut" />
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <!-- <Trigger Property="IsMouseOver" Value="True"> -->
            <!--     <Setter TargetName="Border" Property="Background" Value="#60000000" /> -->
            <!-- </Trigger> -->
            <!-- <Trigger Property="IsPressed" Value="True"> -->
            <!--     <Setter TargetName="Border" Property="Background" Value="#70000000" /> -->
            <!-- </Trigger> -->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
            <Border x:Name="Border" CornerRadius="50" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                    Background="#80000000">
                <TextBlock Text="&#xe641;" Margin="5 0 0 3" VerticalAlignment="Center" HorizontalAlignment="Center"
                           FontSize="36" FontFamily="{DynamicResource Iconfont}" Foreground="#ffffff" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetName="Border"
                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                            To="#60000000"
                            Duration="0:0:0.2">
                            <ColorAnimation.EasingFunction>
                                <BackEase EasingMode="EaseInOut" />
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetName="Border"
                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                            To="#80000000"
                            Duration="0:0:0.2">
                            <ColorAnimation.EasingFunction>
                                <BackEase EasingMode="EaseInOut" />
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeftButtonUp">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetName="Border"
                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                            To="#70000000"
                            Duration="0:0:0.2">
                            <ColorAnimation.EasingFunction>
                                <BackEase EasingMode="EaseInOut" />
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <!-- <Trigger Property="IsMouseOver" Value="True"> -->
            <!--     <Setter TargetName="Border" Property="Background" Value="#60000000" /> -->
            <!-- </Trigger> -->
            <!-- <Trigger Property="IsPressed" Value="True"> -->
            <!--     <Setter TargetName="Border" Property="Background" Value="#70000000" /> -->
            <!-- </Trigger> -->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:ImageViewer}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ImageViewer">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- 图片展示容器 -->
                            <hc:SimplePanel x:Name="PART_PanelMain" ClipToBounds="True" Grid.RowSpan="2">
                                <Border HorizontalAlignment="Left" VerticalAlignment="Top"
                                        Height="{TemplateBinding ImageHeight}" Width="{TemplateBinding ImageWidth}"
                                        Margin="{TemplateBinding ImageMargin}">
                                    <Image Name="PART_ImageMain" RenderOptions.BitmapScalingMode="NearestNeighbor"
                                           RenderTransformOrigin="0.5,0.5" Source="{TemplateBinding ImageSource}" />
                                </Border>
                            </hc:SimplePanel>

                            <!-- 缩略图 -->
                            <Border Grid.Row="0" Grid.RowSpan="2" Width="252" Height="162" HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom" Background="{DynamicResource DarkOpacityBrush}"
                                    BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1">
                                <Border.Visibility>
                                    <MultiBinding Converter="{StaticResource BooleanArr2VisibilityConverter}">
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="ShowSmallImgInternal" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ShowImgMap" />
                                    </MultiBinding>
                                </Border.Visibility>
                                <Canvas ClipToBounds="True" Name="PART_CanvasSmallImg" MaxWidth="250" MaxHeight="160">
                                    <Border UseLayoutRounding="True" Name="PART_BorderMove" Background="Transparent"
                                            Width="50" Height="70" BorderThickness="1" BorderBrush="Black">
                                        <Border BorderThickness="1" BorderBrush="White" />
                                    </Border>
                                </Canvas>
                            </Border>

                            <!-- 上一页下一页 -->
                            <DockPanel x:Name="PART_PrevNextContain" Grid.Row="0" Grid.RowSpan="2"
                                       Visibility="Collapsed"
                                       VerticalAlignment="Center">
                                <Border DockPanel.Dock="Left" Height="60"
                                        x:Name="Prev">
                                    <Button
                                        IsEnabled="{TemplateBinding HasPrevUri}"
                                        FocusVisualStyle="{x:Null}"
                                        x:Name="PrevButton"
                                        Width="50"
                                        Height="50"
                                        Tag="50 50 50 50"
                                        Template="{StaticResource PrevButtonTemplate}" />
                                </Border>
                                <Border DockPanel.Dock="Right" Height="60"
                                        x:Name="Next">
                                    <Button FocusVisualStyle="{x:Null}"
                                            IsEnabled="{TemplateBinding HasNextUri}"
                                            x:Name="NextButton"
                                            Width="50"
                                            Height="50"
                                            Tag="50 50 50 50"
                                            Template="{StaticResource NextButtonTemplate}" />
                                </Border>
                                <Control />
                            </DockPanel>

                            <!-- 工具栏 -->
                            <Border UseLayoutRounding="True" Name="PART_BorderBottom"
                                    Visibility="{TemplateBinding ShowToolBar, Converter={StaticResource Boolean2VisibilityConverter}}"
                                    Opacity="0" CornerRadius="4,4,0,0" Grid.Row="1" HorizontalAlignment="Center"
                                    Background="{DynamicResource DarkOpacityBrush}">
                                <StackPanel Margin="30,10" VerticalAlignment="Center" Orientation="Horizontal">
                                    <Button Command="hc:ControlCommands.Save" Margin="6,0"
                                            Foreground="{DynamicResource TextIconBrush}"
                                            Style="{StaticResource ButtonIcon}"
                                            hc:IconElement.Geometry="{StaticResource SaveGeometry}" Padding="3" />
                                    <!-- <Button Command="hc:ControlCommands.Open" Margin="6,0" Foreground="{DynamicResource TextIconBrush}" Style="{StaticResource ButtonIcon}" hc:IconElement.Geometry="{StaticResource WindowsGeometry}" Padding="3"/> -->

                                    <Border Margin="10,2" Background="White"
                                            Style="{StaticResource BorderVerticallySplitter}" />

                                    <Button Command="hc:ControlCommands.Reduce" Margin="6,0"
                                            Foreground="{DynamicResource TextIconBrush}"
                                            Style="{StaticResource ButtonIcon}"
                                            hc:IconElement.Geometry="{StaticResource ReduceGeometry}" Padding="3" />
                                    <TextBlock Margin="6,0" Text="{TemplateBinding ScaleStr}"
                                               Style="{StaticResource TextBlockSubTitle}"
                                               Foreground="{DynamicResource TextIconBrush}" />
                                    <Button Command="hc:ControlCommands.Enlarge" Margin="6,0"
                                            Foreground="{DynamicResource TextIconBrush}"
                                            Style="{StaticResource ButtonIcon}"
                                            hc:IconElement.Geometry="{StaticResource EnlargeGeometry}" Padding="3" />
                                    <Button Command="hc:ControlCommands.Restore" Background="Transparent" Margin="6,0"
                                            Style="{StaticResource ButtonCustom}"
                                            Foreground="{DynamicResource TextIconBrush}">
                                        <Border BorderThickness="1" BorderBrush="White" Padding="2">
                                            <TextBlock Text="1:1" />
                                        </Border>
                                    </Button>
                                    <Border Margin="10,2" Background="White"
                                            Style="{StaticResource BorderVerticallySplitter}" />
                                    <Button Command="hc:ControlCommands.RotateLeft" CommandParameter="" Margin="6,0"
                                            Foreground="{DynamicResource TextIconBrush}"
                                            Style="{StaticResource ButtonIcon}"
                                            hc:IconElement.Geometry="{StaticResource RotateLeftGeometry}" Padding="3" />
                                    <Button Command="hc:ControlCommands.RotateRight" Margin="6,0,0,0"
                                            Foreground="{DynamicResource TextIconBrush}"
                                            Style="{StaticResource ButtonIcon}"
                                            hc:IconElement.Geometry="{StaticResource RotateRightGeometry}" Padding="3" />
                                    <ToggleButton
                                        Visibility="{TemplateBinding ShowFullScreenButton, Converter={StaticResource Boolean2VisibilityConverter}}"
                                        Foreground="{DynamicResource TextIconBrush}"
                                        IsChecked="{Binding IsFullScreen,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                        Margin="12,0,6,0" Style="{StaticResource ToggleButtonIconTransparent}"
                                        hc:IconSwitchElement.Geometry="{StaticResource FullScreenGeometry}"
                                        hc:IconSwitchElement.GeometrySelected="{StaticResource FullScreenReturnGeometry}"
                                        Padding="3" />
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsShowPrevNext" Value="True" />
                                <Condition Property="HasImgList" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" TargetName="PART_PrevNextContain" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="HasPrevUri" Value="False">
                            <Setter Property="Cursor" Value="No" TargetName="Prev" />
                        </Trigger>
                        <Trigger Property="HasNextUri" Value="False">
                            <Setter Property="Cursor" Value="No" TargetName="Next" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>